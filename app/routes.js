// Generated by CoffeeScript 1.3.3

module.exports = function(app) {
  var characters, die_on_error, fs, ftp, random_name, rest, video_type;
  die_on_error = require('./util').die_on_error;
  rest = require('./rest');
  fs = require('fs');
  ftp = require('ftp');
  characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
  random_name = function(length) {
    var chars, i;
    chars = (function() {
      var _i, _results;
      _results = [];
      for (i = _i = 0; 0 <= length ? _i < length : _i > length; i = 0 <= length ? ++_i : --_i) {
        _results.push(characters[Math.floor(Math.random() * characters.length)]);
      }
      return _results;
    })();
    return chars.join('');
  };
  video_type = rest.add_type(app, 'video', {});
  app.get('/add_video', function(req, res) {
    return res.render('add_video');
  });
  app.post('/add_video', function(req, res) {
    return fs.readFile(req.files.video.path, function(err, data) {
      var client;
      client = new ftp();
      client.on('ready', function() {
        var key;
        key = "videos/" + (random_name(16)) + ".mp4";
        return client.put(data, key, die_on_error(res, function() {
          client.end();
          return video_type.add({
            video: "http://acsvolleyball.com/" + key
          }, die_on_error(res, function(video) {
            return res.redirect("/stat/" + video.id);
          }));
        }));
      });
      client.on('error', function(err) {
        return res.send(err);
      });
      return client.connect({
        host: 'acsvolleyball.com',
        user: 'acsvolleyball',
        password: 'Voll3yball'
      });
    });
  });
  app.get('/stat/:id', function(req, res) {
    console.log(req.params.id);
    return video_type.get(req.params.id, die_on_error(res, function(video) {
      console.log(video);
      return res.render('stat', {
        vid: video
      });
    }));
  });
  return app.get('/view/:id', function(req, res) {
    console.log(req.params.id);
    return video_type.get(req.params.id, die_on_error(res, function(video) {
      console.log(video);
      return res.render('view', {
        vid: video
      });
    }));
  });
};
